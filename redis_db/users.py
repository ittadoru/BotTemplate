from datetime import date, timedelta
from redis_db import r
from aiogram import types, Bot
from config import ADMINS
from utils import logger as log


async def add_user(user: types.User, bot: Bot):
    """
    –î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Redis, –µ—Å–ª–∏ –æ–Ω –Ω–æ–≤—ã–π ‚Äî —É–≤–µ–¥–æ–º–ª—è–µ—Ç –∞–¥–º–∏–Ω–æ–≤.
    """
    is_new = not await r.sismember("users", user.id)
    await r.sadd("users", user.id)
    await r.hset(
        f"user:{user.id}",
        mapping={"first_name": user.first_name or "", "username": user.username or ""},
    )

    if is_new:
        log.log_message(
            f"–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.full_name} (@{user.username}) | id={user.id}",
            emoji="1Ô∏è‚É£",
        )
        for admin_id in ADMINS:
            try:
                text = (
                    f"üë§ –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:\n\n"
                    f"–ò–º—è: {user.first_name}\n"
                    f"@{user.username or '–ë–µ–∑ username'}\n"
                    f"<pre>ID: {user.id}</pre>"
                )
                await bot.send_message(admin_id, text=text, parse_mode="HTML")
            except Exception as e:
                log.log_error(
                    f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É {admin_id}: {e}",
                    user.username,
                )

async def log_user_activity(user_id: int):
    """
    –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ HyperLogLog –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞ —Å–µ–≥–æ–¥–Ω—è.
    """
    today_key = f"active_users:{date.today()}"
    await r.pfadd(today_key, user_id)
    # –î–µ—Ä–∂–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É 7 –¥–Ω–µ–π
    await r.expire(today_key, 7 * 24 * 60 * 60)

async def get_user_id_by_username(username: str):
    """
    –ù–∞–π—Ç–∏ user_id –ø–æ username (—Ä–µ–≥–∏—Å—Ç—Ä –Ω–µ –≤–∞–∂–µ–Ω).
    """
    user_ids = await r.smembers("users")
    for uid in user_ids:
        data = await r.hgetall(f"user:{uid}")
        if data.get("username", "").lower() == username.lower():
            return int(uid)
    return None
