from aiogram import Router, types
from aiogram.types import CallbackQuery
import datetime

from utils import logger as log
from config import ADMIN_ERROR
from db.base import get_session
from db.users import get_total_users, get_active_users_today
from db.subscribers import get_total_subscribers


router = Router()

@router.callback_query(lambda c: c.data == "stats")
async def handle_stats(callback: CallbackQuery):

    try:
        async with get_session() as session:
            total_users = await get_total_users(session)
            total_subscribers = await get_total_subscribers(session)
            active_users_today = await get_active_users_today(session)
    except Exception as e:
        log.log_error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
        await callback.message.answer("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.")
        await callback.message.bot.send_message(ADMIN_ERROR, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
        return await callback.answer()

    msg = (
        f"üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n"
        f"üë• –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: <b>{total_users}</b>\n"
        f"üíé –° –ø–æ–¥–ø–∏—Å–∫–æ–π: <b>{total_subscribers}</b>\n"
        f"üü¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ–≥–æ–¥–Ω—è: <b>{active_users_today}</b>\n"
    )

    keyboard = types.InlineKeyboardMarkup(
        inline_keyboard=[
            [types.InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="admin_menu")]
        ]
    )
    log.log_message("–ê–¥–º–∏–Ω –∑–∞–ø—Ä–æ—Å–∏–ª —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É", emoji="üìä")
    await callback.message.edit_text(msg, parse_mode="HTML", reply_markup=keyboard)
    await callback.answer()
